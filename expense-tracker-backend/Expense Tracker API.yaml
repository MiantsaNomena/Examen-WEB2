openapi: 3.0.3
info:
  title: Expense Tracker API
  description: A comprehensive expense tracking API with JWT authentication, expense/income management, categories, receipts, and financial analytics
  version: 1.0.0
  contact:
    name: Expense Tracker API
    email: support@expensetracker.com

servers:
  - url: http://localhost:3000/api
    description: Development server

security:
  - bearerAuth: []

paths:
  # Authentication Routes
  /auth/signup:
    post:
      tags:
        - Authentication
      summary: User registration
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 6
                name:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user profile
      responses:
        '200':
          description: User profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Expense Routes
  /expenses:
    get:
      tags:
        - Expenses
      summary: List user expenses
      parameters:
        - name: start
          in: query
          schema:
            type: string
            format: date
        - name: end
          in: query
          schema:
            type: string
            format: date
        - name: category
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Expenses retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Expenses
      summary: Create new expense
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - amount
                - date
              properties:
                amount:
                  type: number
                  format: float
                date:
                  type: string
                  format: date
                categoryId:
                  type: integer
                description:
                  type: string
                receipt:
                  type: string
                  format: binary
      responses:
        '201':
          description: Expense created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /expenses/{id}:
    get:
      tags:
        - Expenses
      summary: Get single expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Expenses
      summary: Update expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                date:
                  type: string
                  format: date
                categoryId:
                  type: integer
                description:
                  type: string
                receipt:
                  type: string
                  format: binary
      responses:
        '200':
          description: Expense updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Expenses
      summary: Delete expense
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Expense deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Income Routes
  /incomes:
    get:
      tags:
        - Incomes
      summary: List user incomes
      parameters:
        - name: start
          in: query
          schema:
            type: string
            format: date
        - name: end
          in: query
          schema:
            type: string
            format: date
        - name: limit
          in: query
          schema:
            type: integer
            default: 50
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Incomes retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Incomes
      summary: Create new income
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - date
              properties:
                amount:
                  type: number
                  format: float
                date:
                  type: string
                  format: date
                source:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: Income created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /incomes/{id}:
    get:
      tags:
        - Incomes
      summary: Get single income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Income retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Incomes
      summary: Update income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
                date:
                  type: string
                  format: date
                source:
                  type: string
                description:
                  type: string
      responses:
        '200':
          description: Income updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Incomes
      summary: Delete income
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Income deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Category Routes
  /categories:
    get:
      tags:
        - Categories
      summary: List user categories
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Categories
      summary: Create new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /categories/{id}:
    put:
      tags:
        - Categories
      summary: Update category name
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Categories
      summary: Delete category (if not used)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryResponse'
        '400':
          description: Category is in use
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Summary Routes
  /summary/monthly:
    get:
      tags:
        - Summary
      summary: Get monthly summary
      parameters:
        - name: month
          in: query
          schema:
            type: string
            pattern: '^\d{4}-\d{2}$'
            example: '2025-08'
      responses:
        '200':
          description: Monthly summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthlySummaryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /summary:
    get:
      tags:
        - Summary
      summary: Get summary between dates
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /summary/alerts:
    get:
      tags:
        - Summary
      summary: Get budget alerts
      responses:
        '200':
          description: Alerts retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # User Profile Routes
  /user/profile:
    get:
      tags:
        - User Profile
      summary: Get user profile
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Receipt Routes
  /receipts/{idExpense}:
    get:
      tags:
        - Receipts
      summary: Download or view receipt file
      parameters:
        - name: idExpense
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Receipt file
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Receipt not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    # Auth Schemas
    AuthResponse:
      type: object
      properties:
        message:
          type: string
        token:
          type: string
        user:
          $ref: '#/components/schemas/User'

    User:
      type: object
      properties:
        id_utilisateur:
          type: integer
        nom:
          type: string
        email:
          type: string
        date_creation:
          type: string
          format: date-time

    UserProfileResponse:
      type: object
      properties:
        message:
          type: string
        profile:
          allOf:
            - $ref: '#/components/schemas/User'
            - type: object
              properties:
                accounts:
                  type: array
                  items:
                    $ref: '#/components/schemas/Account'

    Account:
      type: object
      properties:
        id_compte:
          type: integer
        nom:
          type: string
        type_compte:
          type: string
        solde:
          type: number
          format: float

    # Expense Schemas
    Expense:
      type: object
      properties:
        id_transaction:
          type: integer
        montant:
          type: number
          format: float
        date_transaction:
          type: string
          format: date
        description:
          type: string
        type_transaction:
          type: string
          enum: [depense]
        nom_categorie:
          type: string
        type_categorie:
          type: string
        nom_compte:
          type: string

    ExpenseResponse:
      type: object
      properties:
        message:
          type: string
        expense:
          $ref: '#/components/schemas/Expense'

    ExpenseListResponse:
      type: object
      properties:
        message:
          type: string
        expenses:
          type: array
          items:
            $ref: '#/components/schemas/Expense'
        total:
          type: integer
        filters:
          type: object
        pagination:
          type: object

    # Income Schemas
    Income:
      type: object
      properties:
        id_transaction:
          type: integer
        montant:
          type: number
          format: float
        date_transaction:
          type: string
          format: date
        description:
          type: string
        type_transaction:
          type: string
          enum: [revenu]
        source:
          type: string

    IncomeResponse:
      type: object
      properties:
        message:
          type: string
        income:
          $ref: '#/components/schemas/Income'

    IncomeListResponse:
      type: object
      properties:
        message:
          type: string
        incomes:
          type: array
          items:
            $ref: '#/components/schemas/Income'
        total:
          type: integer
        filters:
          type: object
        pagination:
          type: object

    # Category Schemas
    Category:
      type: object
      properties:
        id_categorie:
          type: integer
        nom:
          type: string
        type_categorie:
          type: string
        id_utilisateur:
          type: integer

    CategoryResponse:
      type: object
      properties:
        message:
          type: string
        category:
          $ref: '#/components/schemas/Category'

    CategoryListResponse:
      type: object
      properties:
        message:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        total:
          type: integer

    # Summary Schemas
    MonthlySummaryResponse:
      type: object
      properties:
        message:
          type: string
        period:
          type: string
        summary:
          type: object
          properties:
            income:
              type: object
              properties:
                total:
                  type: number
                transactions:
                  type: integer
            expenses:
              type: object
              properties:
                total:
                  type: number
                transactions:
                  type: integer
            balance:
              type: number
            savings_rate:
              type: string

    SummaryResponse:
      type: object
      properties:
        message:
          type: string
        period:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date
        summary:
          type: object
          properties:
            income:
              type: object
              properties:
                total:
                  type: number
                transactions:
                  type: integer
                by_category:
                  type: object
            expenses:
              type: object
              properties:
                total:
                  type: number
                transactions:
                  type: integer
                by_category:
                  type: object
            balance:
              type: number
            savings_rate:
              type: string

    AlertsResponse:
      type: object
      properties:
        alert:
          type: boolean
        message:
          type: string
          nullable: true
        current_month:
          type: string
        details:
          type: object
          properties:
            total_income:
              type: number
            total_expenses:
              type: number
            balance:
              type: number
            spending_rate:
              type: string
              nullable: true

    # Error Schemas
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Forbidden:
      description: Forbidden - Resource doesn't belong to user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
